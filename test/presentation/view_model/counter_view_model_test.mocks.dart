// Mocks generated by Mockito 5.3.2 from annotations
// in todo_dafault/test/presentation/view_model/counter_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_dafault/common/failure.dart' as _i6;
import 'package:todo_dafault/domain/entities/counter_response.dart' as _i7;
import 'package:todo_dafault/domain/repositories/repository.dart' as _i2;
import 'package:todo_dafault/domain/usecases/get_counter_task.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRepository_0 extends _i1.SmartFake implements _i2.Repository {
  _FakeRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetCounterTask].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCounterTask extends _i1.Mock implements _i4.GetCounterTask {
  MockGetCounterTask() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.Repository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.CounterResponse>> execute(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [token],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i7.CounterResponse>>.value(
                _FakeEither_1<_i6.Failure, _i7.CounterResponse>(
          this,
          Invocation.method(
            #execute,
            [token],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.CounterResponse>>);
}
