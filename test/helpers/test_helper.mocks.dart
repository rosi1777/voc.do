// Mocks generated by Mockito 5.3.2 from annotations
// in todo_dafault/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:convert' as _i17;
import 'dart:typed_data' as _i18;

import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i6;
import 'package:todo_dafault/common/failure.dart' as _i10;
import 'package:todo_dafault/data/datasources/local_data_sources.dart' as _i15;
import 'package:todo_dafault/data/datasources/remote_data_sources.dart' as _i14;
import 'package:todo_dafault/data/datasources/shared_preference/preferences_service.dart'
    as _i16;
import 'package:todo_dafault/data/model/counter_response_model.dart' as _i5;
import 'package:todo_dafault/data/model/task_response_model.dart' as _i4;
import 'package:todo_dafault/data/model/user_response_model.dart' as _i3;
import 'package:todo_dafault/domain/entities/counter_response.dart' as _i13;
import 'package:todo_dafault/domain/entities/task_response.dart' as _i12;
import 'package:todo_dafault/domain/entities/user_response.dart' as _i11;
import 'package:todo_dafault/domain/repositories/repository.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserResponseModel_1 extends _i1.SmartFake
    implements _i3.UserResponseModel {
  _FakeUserResponseModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTaskResponseModel_2 extends _i1.SmartFake
    implements _i4.TaskResponseModel {
  _FakeTaskResponseModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCounterResponseModel_3 extends _i1.SmartFake
    implements _i5.CounterResponseModel {
  _FakeCounterResponseModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedPreferences_4 extends _i1.SmartFake
    implements _i6.SharedPreferences {
  _FakeSharedPreferences_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_5 extends _i1.SmartFake implements _i7.Response {
  _FakeResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_6 extends _i1.SmartFake
    implements _i7.StreamedResponse {
  _FakeStreamedResponse_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Repository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepository extends _i1.Mock implements _i8.Repository {
  MockRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Either<_i10.Failure, dynamic>> signUp(
    String? name,
    String? email,
    String? password,
    String? confirmPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [
            name,
            email,
            password,
            confirmPassword,
          ],
        ),
        returnValue: _i9.Future<_i2.Either<_i10.Failure, dynamic>>.value(
            _FakeEither_0<_i10.Failure, dynamic>(
          this,
          Invocation.method(
            #signUp,
            [
              name,
              email,
              password,
              confirmPassword,
            ],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, dynamic>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, _i11.UserResponse>> signIn(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [
            email,
            password,
          ],
        ),
        returnValue:
            _i9.Future<_i2.Either<_i10.Failure, _i11.UserResponse>>.value(
                _FakeEither_0<_i10.Failure, _i11.UserResponse>(
          this,
          Invocation.method(
            #signIn,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, _i11.UserResponse>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, dynamic>> addTask(
    String? token,
    String? tittle,
    String? description,
    String? time,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTask,
          [
            token,
            tittle,
            description,
            time,
          ],
        ),
        returnValue: _i9.Future<_i2.Either<_i10.Failure, dynamic>>.value(
            _FakeEither_0<_i10.Failure, dynamic>(
          this,
          Invocation.method(
            #addTask,
            [
              token,
              tittle,
              description,
              time,
            ],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, dynamic>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, dynamic>> updateTask(
    String? token,
    String? id,
    String? tittle,
    String? description,
    String? time,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTask,
          [
            token,
            id,
            tittle,
            description,
            time,
          ],
        ),
        returnValue: _i9.Future<_i2.Either<_i10.Failure, dynamic>>.value(
            _FakeEither_0<_i10.Failure, dynamic>(
          this,
          Invocation.method(
            #updateTask,
            [
              token,
              id,
              tittle,
              description,
              time,
            ],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, dynamic>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, dynamic>> deleteTask(
    String? token,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [
            token,
            id,
          ],
        ),
        returnValue: _i9.Future<_i2.Either<_i10.Failure, dynamic>>.value(
            _FakeEither_0<_i10.Failure, dynamic>(
          this,
          Invocation.method(
            #deleteTask,
            [
              token,
              id,
            ],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, dynamic>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, dynamic>> markAsDoneTask(
    String? token,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #markAsDoneTask,
          [
            token,
            id,
          ],
        ),
        returnValue: _i9.Future<_i2.Either<_i10.Failure, dynamic>>.value(
            _FakeEither_0<_i10.Failure, dynamic>(
          this,
          Invocation.method(
            #markAsDoneTask,
            [
              token,
              id,
            ],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, dynamic>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, _i12.TaskResponse>> getAllTask(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllTask,
          [token],
        ),
        returnValue:
            _i9.Future<_i2.Either<_i10.Failure, _i12.TaskResponse>>.value(
                _FakeEither_0<_i10.Failure, _i12.TaskResponse>(
          this,
          Invocation.method(
            #getAllTask,
            [token],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, _i12.TaskResponse>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, _i12.TaskResponse>> getTodayTask(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodayTask,
          [token],
        ),
        returnValue:
            _i9.Future<_i2.Either<_i10.Failure, _i12.TaskResponse>>.value(
                _FakeEither_0<_i10.Failure, _i12.TaskResponse>(
          this,
          Invocation.method(
            #getTodayTask,
            [token],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, _i12.TaskResponse>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, _i12.TaskResponse>> getOverdueTask(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOverdueTask,
          [token],
        ),
        returnValue:
            _i9.Future<_i2.Either<_i10.Failure, _i12.TaskResponse>>.value(
                _FakeEither_0<_i10.Failure, _i12.TaskResponse>(
          this,
          Invocation.method(
            #getOverdueTask,
            [token],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, _i12.TaskResponse>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, _i12.TaskResponse>> getDoneTask(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDoneTask,
          [token],
        ),
        returnValue:
            _i9.Future<_i2.Either<_i10.Failure, _i12.TaskResponse>>.value(
                _FakeEither_0<_i10.Failure, _i12.TaskResponse>(
          this,
          Invocation.method(
            #getDoneTask,
            [token],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, _i12.TaskResponse>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, _i12.TaskResponse>> getTodoTask(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodoTask,
          [token],
        ),
        returnValue:
            _i9.Future<_i2.Either<_i10.Failure, _i12.TaskResponse>>.value(
                _FakeEither_0<_i10.Failure, _i12.TaskResponse>(
          this,
          Invocation.method(
            #getTodoTask,
            [token],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, _i12.TaskResponse>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, _i13.CounterResponse>> getCounterTask(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCounterTask,
          [token],
        ),
        returnValue:
            _i9.Future<_i2.Either<_i10.Failure, _i13.CounterResponse>>.value(
                _FakeEither_0<_i10.Failure, _i13.CounterResponse>(
          this,
          Invocation.method(
            #getCounterTask,
            [token],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, _i13.CounterResponse>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, String?>> getToken() =>
      (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i9.Future<_i2.Either<_i10.Failure, String?>>.value(
            _FakeEither_0<_i10.Failure, String?>(
          this,
          Invocation.method(
            #getToken,
            [],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, String?>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, String?>> getName() =>
      (super.noSuchMethod(
        Invocation.method(
          #getName,
          [],
        ),
        returnValue: _i9.Future<_i2.Either<_i10.Failure, String?>>.value(
            _FakeEither_0<_i10.Failure, String?>(
          this,
          Invocation.method(
            #getName,
            [],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, String?>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, String?>> getEmail() =>
      (super.noSuchMethod(
        Invocation.method(
          #getEmail,
          [],
        ),
        returnValue: _i9.Future<_i2.Either<_i10.Failure, String?>>.value(
            _FakeEither_0<_i10.Failure, String?>(
          this,
          Invocation.method(
            #getEmail,
            [],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, String?>>);
  @override
  _i9.Future<_i2.Either<_i10.Failure, bool>> isOnBoardingViewed() =>
      (super.noSuchMethod(
        Invocation.method(
          #isOnBoardingViewed,
          [],
        ),
        returnValue: _i9.Future<_i2.Either<_i10.Failure, bool>>.value(
            _FakeEither_0<_i10.Failure, bool>(
          this,
          Invocation.method(
            #isOnBoardingViewed,
            [],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, bool>>);
  @override
  _i9.Future<dynamic> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i9.Future<dynamic>.value(),
      ) as _i9.Future<dynamic>);
  @override
  void setToken(String? value) => super.noSuchMethod(
        Invocation.method(
          #setToken,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setName(String? value) => super.noSuchMethod(
        Invocation.method(
          #setName,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setEmail(String? value) => super.noSuchMethod(
        Invocation.method(
          #setEmail,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setOnBoarding(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnBoarding,
          [value],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i14.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<dynamic> signUp(
    String? name,
    String? email,
    String? password,
    String? confirmPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [
            name,
            email,
            password,
            confirmPassword,
          ],
        ),
        returnValue: _i9.Future<dynamic>.value(),
      ) as _i9.Future<dynamic>);
  @override
  _i9.Future<_i3.UserResponseModel> signIn(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [
            email,
            password,
          ],
        ),
        returnValue:
            _i9.Future<_i3.UserResponseModel>.value(_FakeUserResponseModel_1(
          this,
          Invocation.method(
            #signIn,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i9.Future<_i3.UserResponseModel>);
  @override
  _i9.Future<_i4.TaskResponseModel> getAllTask(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllTask,
          [token],
        ),
        returnValue:
            _i9.Future<_i4.TaskResponseModel>.value(_FakeTaskResponseModel_2(
          this,
          Invocation.method(
            #getAllTask,
            [token],
          ),
        )),
      ) as _i9.Future<_i4.TaskResponseModel>);
  @override
  _i9.Future<_i4.TaskResponseModel> getTodayTask(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodayTask,
          [token],
        ),
        returnValue:
            _i9.Future<_i4.TaskResponseModel>.value(_FakeTaskResponseModel_2(
          this,
          Invocation.method(
            #getTodayTask,
            [token],
          ),
        )),
      ) as _i9.Future<_i4.TaskResponseModel>);
  @override
  _i9.Future<_i4.TaskResponseModel> getOverdueTask(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOverdueTask,
          [token],
        ),
        returnValue:
            _i9.Future<_i4.TaskResponseModel>.value(_FakeTaskResponseModel_2(
          this,
          Invocation.method(
            #getOverdueTask,
            [token],
          ),
        )),
      ) as _i9.Future<_i4.TaskResponseModel>);
  @override
  _i9.Future<_i4.TaskResponseModel> getDoneTask(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDoneTask,
          [token],
        ),
        returnValue:
            _i9.Future<_i4.TaskResponseModel>.value(_FakeTaskResponseModel_2(
          this,
          Invocation.method(
            #getDoneTask,
            [token],
          ),
        )),
      ) as _i9.Future<_i4.TaskResponseModel>);
  @override
  _i9.Future<_i4.TaskResponseModel> getTodoTask(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodoTask,
          [token],
        ),
        returnValue:
            _i9.Future<_i4.TaskResponseModel>.value(_FakeTaskResponseModel_2(
          this,
          Invocation.method(
            #getTodoTask,
            [token],
          ),
        )),
      ) as _i9.Future<_i4.TaskResponseModel>);
  @override
  _i9.Future<_i5.CounterResponseModel> getCounterTask(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCounterTask,
          [token],
        ),
        returnValue: _i9.Future<_i5.CounterResponseModel>.value(
            _FakeCounterResponseModel_3(
          this,
          Invocation.method(
            #getCounterTask,
            [token],
          ),
        )),
      ) as _i9.Future<_i5.CounterResponseModel>);
  @override
  _i9.Future<dynamic> addTask(
    String? token,
    String? tittle,
    String? description,
    String? time,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTask,
          [
            token,
            tittle,
            description,
            time,
          ],
        ),
        returnValue: _i9.Future<dynamic>.value(),
      ) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> updateTask(
    String? token,
    String? id,
    String? tittle,
    String? description,
    String? time,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTask,
          [
            token,
            id,
            tittle,
            description,
            time,
          ],
        ),
        returnValue: _i9.Future<dynamic>.value(),
      ) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> deleteTask(
    String? token,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [
            token,
            id,
          ],
        ),
        returnValue: _i9.Future<dynamic>.value(),
      ) as _i9.Future<dynamic>);
  @override
  _i9.Future<dynamic> markAsDoneTask(
    String? token,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #markAsDoneTask,
          [
            token,
            id,
          ],
        ),
        returnValue: _i9.Future<dynamic>.value(),
      ) as _i9.Future<dynamic>);
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i15.LocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<String?> getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);
  @override
  _i9.Future<String?> getName() => (super.noSuchMethod(
        Invocation.method(
          #getName,
          [],
        ),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);
  @override
  _i9.Future<String?> getEmail() => (super.noSuchMethod(
        Invocation.method(
          #getEmail,
          [],
        ),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);
  @override
  _i9.Future<bool> isOnBoardingViewed() => (super.noSuchMethod(
        Invocation.method(
          #isOnBoardingViewed,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
  @override
  _i9.Future<dynamic> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i9.Future<dynamic>.value(),
      ) as _i9.Future<dynamic>);
  @override
  void setToken(String? value) => super.noSuchMethod(
        Invocation.method(
          #setToken,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setName(String? value) => super.noSuchMethod(
        Invocation.method(
          #setName,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setEmail(String? value) => super.noSuchMethod(
        Invocation.method(
          #setEmail,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setOnBoarding(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnBoarding,
          [value],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PreferencesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPreferencesService extends _i1.Mock
    implements _i16.PreferencesService {
  MockPreferencesService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i6.SharedPreferences> get sharedPreferences =>
      (super.noSuchMethod(
        Invocation.getter(#sharedPreferences),
        returnValue:
            _i9.Future<_i6.SharedPreferences>.value(_FakeSharedPreferences_4(
          this,
          Invocation.getter(#sharedPreferences),
        )),
      ) as _i9.Future<_i6.SharedPreferences>);
  @override
  _i9.Future<String?> get token => (super.noSuchMethod(
        Invocation.getter(#token),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);
  @override
  _i9.Future<String?> get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);
  @override
  _i9.Future<String?> get email => (super.noSuchMethod(
        Invocation.getter(#email),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);
  @override
  _i9.Future<bool> get isOnBoardingViewed => (super.noSuchMethod(
        Invocation.getter(#isOnBoardingViewed),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
  @override
  void setTokenPreference(String? value) => super.noSuchMethod(
        Invocation.method(
          #setTokenPreference,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setNamePreference(String? value) => super.noSuchMethod(
        Invocation.method(
          #setNamePreference,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setEmailPreference(String? value) => super.noSuchMethod(
        Invocation.method(
          #setEmailPreference,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setOnBoardingPreference(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnBoardingPreference,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<dynamic> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i9.Future<dynamic>.value(),
      ) as _i9.Future<dynamic>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i7.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i7.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i9.Future<_i7.Response>);
  @override
  _i9.Future<_i7.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i9.Future<_i7.Response>);
  @override
  _i9.Future<_i7.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i17.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response>);
  @override
  _i9.Future<_i7.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i17.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response>);
  @override
  _i9.Future<_i7.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i17.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response>);
  @override
  _i9.Future<_i7.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i17.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response>);
  @override
  _i9.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i9.Future<String>.value(''),
      ) as _i9.Future<String>);
  @override
  _i9.Future<_i18.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i9.Future<_i18.Uint8List>.value(_i18.Uint8List(0)),
      ) as _i9.Future<_i18.Uint8List>);
  @override
  _i9.Future<_i7.StreamedResponse> send(_i7.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i9.Future<_i7.StreamedResponse>.value(_FakeStreamedResponse_6(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i9.Future<_i7.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
